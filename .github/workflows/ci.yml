name: CI Pipeline

on:
  pull_request:
    branches:
      - main

permissions:
  contents: read
  pull-requests: write 

jobs:
  k8s-test:
    name: Kubernetes Test Suite
    runs-on: ubuntu-latest

    steps:
      - name: 🧾 Checkout code
        uses: actions/checkout@v3

      - name: ⚙️ Install KinD and kubectl
        run: |
          curl -L "https://kind.sigs.k8s.io/dl/v0.20.0/kind-linux-amd64" -o kind
          chmod +x kind && sudo mv kind /usr/local/bin/kind

          curl -LO "https://dl.k8s.io/release/v1.32.3/bin/linux/amd64/kubectl"
          chmod +x kubectl && sudo mv kubectl /usr/local/bin/kubectl

      - name: 🏗️ Create KinD cluster
        run: kind create cluster --config cluster/kind-config.yaml

      - name: 🏷️ Label nodes for ingress
        run: |
          for node in $(kubectl get nodes -o name); do
            kubectl label $node ingress-ready=true --overwrite
          done

      - name: 🔍 Check Kubernetes cluster status
        run: kubectl cluster-info

      - name: 🌐 Deploy NGINX Ingress Controller
        run: |
          kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.9.4/deploy/static/provider/kind/deploy.yaml

          echo "⏳ Waiting for ingress-nginx-controller pod to be ready..."
          kubectl wait --namespace ingress-nginx \
            --for=condition=ready pod \
            --selector=app.kubernetes.io/component=controller \
            --timeout=300s || {
              echo "❌ Ingress controller failed to become ready. Dumping logs:"
              kubectl get pods -n ingress-nginx -o wide
              kubectl describe pods -n ingress-nginx
              kubectl logs -n ingress-nginx -l app.kubernetes.io/component=controller || true
              exit 1
            }

      - name: 🚀 Deploy echo services and ingress
        run: kubectl apply -f manifests/

      - name: ✅ Wait for application deployments to be ready
        run: |
          kubectl wait --for=condition=available --timeout=90s deployment/foo
          kubectl wait --for=condition=available --timeout=90s deployment/bar

      - name: 🔧 Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      - name: 📈 Deploy Prometheus via Helm
        run: |
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          helm repo update
          helm install prometheus prometheus-community/prometheus --namespace monitoring --create-namespace

      - name: ⏳ Wait for Prometheus server to be ready
        run: |
          kubectl wait --namespace monitoring \
            --for=condition=ready pod \
            --selector=app.kubernetes.io/name=prometheus \
            --timeout=180s

      - name: 📊 Run load testing with k6
        run: |
          echo "📦 Downloading k6..."
          curl -L -o k6.tar.gz https://github.com/grafana/k6/releases/download/v0.47.0/k6-v0.47.0-linux-amd64.tar.gz
          tar -xzf k6.tar.gz
          ./k6-v0.47.0-linux-amd64/k6 run scripts/loadtest.js | tee result.txt

      - name: 📝 Prepare PR comment body
        run: |
          echo "## 🚀 Load Testing Report" > body.txt
          echo '```' >> body.txt
          cat result.txt >> body.txt
          echo '```' >> body.txt

      - name: 💬 Comment load test results on PR
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body-path: body.txt
